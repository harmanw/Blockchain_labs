
Using network 'development'.


Compiling your contracts...
===========================
> Compiling ./test/attacker_test.sol


[0m[0m
[0m  attacker_test[0m
  [32m  âœ“[0m[90m testBankDeployment[0m[31m (119ms)[0m
  [32m  âœ“[0m[90m testAttackerDeployment[0m[33m (56ms)[0m
  [32m  âœ“[0m[90m testAttack[0m[31m (164ms)[0m
  [32m  âœ“[0m[90m testBankMoneyDrained[0m[33m (38ms)[0m
  [32m  âœ“[0m[90m testAttackerMoneyReceived[0m[33m (56ms)[0m


[92m [0m[32m 5 passing[0m[90m (7s)[0m
Using network 'development'.


Compiling your contracts...
===========================
> Compiling ./test/bank_test.sol


[0m[0m
[0m  bank_test[0m
  [32m  âœ“[0m[90m testSetup[0m[33m (62ms)[0m
  [31m  1) testAttackBank[0m

    Events emitted during test:
    ---------------------------

    LOG(message: Account Created ! (string), value: 0 (uint256))
    LOG(message: Deposit complete! Total Bank balance is : (string), value: 2000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))
    LOG(message: Received Money! My balance now is  (string), value: 13000000000000000000 (uint256))
    LOGtransfer(message: Money sent ! (string), to: 0x2e0619fC935B1857E85fD7866952C6540EA41918 (address), value: 1000000000000000000 (uint256))

    ---------------------------
  [31m  2) testSafeAgainstReentrancy[0m

    Events emitted during test:
    ---------------------------


    ---------------------------


[92m [0m[32m 1 passing[0m[90m (7s)[0m
[31m  2 failing[0m

[0m  1) bank_test
       testAttackBank:
[0m[31m     Error: atker received some money (Tested: 0, Against: 10000000000000000000)[0m[90m
      at result.logs.forEach.log (/usr/local/lib/node_modules/truffle/build/webpack:/packages/core/lib/testing/soliditytest.js:71:1)
      at Array.forEach (<anonymous>)
      at processResult (/usr/local/lib/node_modules/truffle/build/webpack:/packages/core/lib/testing/soliditytest.js:69:1)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m
[0m  2) bank_test
       testSafeAgainstReentrancy:
[0m[31m     Error: atker received some money (Tested: 0, Against: 10000000000000000000)[0m[90m
      at result.logs.forEach.log (/usr/local/lib/node_modules/truffle/build/webpack:/packages/core/lib/testing/soliditytest.js:71:1)
      at Array.forEach (<anonymous>)
      at processResult (/usr/local/lib/node_modules/truffle/build/webpack:/packages/core/lib/testing/soliditytest.js:69:1)
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m
